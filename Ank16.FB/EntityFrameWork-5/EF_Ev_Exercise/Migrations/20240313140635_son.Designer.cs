// <auto-generated />
using EF_Ev_Exercise.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Ev_Exercise.Migrations
{
    [DbContext(typeof(EvContext))]
    [Migration("20240313140635_son")]
    partial class son
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_Ev_Exercise.Daire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("KisiId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KisiId");

                    b.ToTable("Daireler");
                });

            modelBuilder.Entity("EF_Ev_Exercise.Kisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KisiAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kisiler");
                });

            modelBuilder.Entity("EF_Ev_Exercise.Tapu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DaireId")
                        .HasColumnType("int");

                    b.Property<string>("TapuAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DaireId")
                        .IsUnique();

                    b.ToTable("Tapular");
                });

            modelBuilder.Entity("EF_Ev_Exercise.Daire", b =>
                {
                    b.HasOne("EF_Ev_Exercise.Kisi", "Kisi")
                        .WithMany("Daireler")
                        .HasForeignKey("KisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kisi");
                });

            modelBuilder.Entity("EF_Ev_Exercise.Tapu", b =>
                {
                    b.HasOne("EF_Ev_Exercise.Daire", "Daire")
                        .WithOne("Tapu")
                        .HasForeignKey("EF_Ev_Exercise.Tapu", "DaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Daire");
                });

            modelBuilder.Entity("EF_Ev_Exercise.Daire", b =>
                {
                    b.Navigation("Tapu")
                        .IsRequired();
                });

            modelBuilder.Entity("EF_Ev_Exercise.Kisi", b =>
                {
                    b.Navigation("Daireler");
                });
#pragma warning restore 612, 618
        }
    }
}
